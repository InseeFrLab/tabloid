% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tab_round.R
\name{tab_round}
\alias{tab_round}
\title{Arrondir les résultats d'un tableau}
\usage{
tab_round(
  tab,
  n = 0,
  guarantee_100 = FALSE,
  option = "lowest_lie",
  verbose = FALSE
)
}
\arguments{
\item{tab}{tableau croisé issu de tab_build}

\item{n}{nombre de décimales à conserver - par défaut : 0 (arrondi à l'entier)
Ce paramètre peut prendre des valeurs positives, ou négatives pour arrondir à la dizaine, la centaine, etc :
\itemize{
\item{\verb{0, 1, 2, ...} : entier, 1 décimale, 2 décimales, etc...}
\item{\code{-1} : arrondi à la dizaine}
\item{\code{-2} : arrondi à la centaine}
\item{\code{"etc..."} : ...}
}}

\item{guarantee_100}{pour les arrondis de pourcentages lignes ou colonnes,
faut-il gérer la cohérence des arrondis au niveau n ? - par défaut : FALSE}

\item{option}{option à retenir pour le calcul de la garantie à 100  - par défaut : "lowest_lie"
Ce paramètre peut prendre les valeurs suivantes :
\itemize{
\item{\code{"lowest_lie"} : ...}
\item{\code{"closest"} : ...}
}}

\item{verbose}{affichage ou non des détails sur ce qui est fait pour guarantee_100 - par défaut : FALSE}
}
\value{
tableau avec cellules arrondies
}
\description{
tab_round() permet d'arrondir les données des cellules, et éventuellement de gérer la cohérence
des sommes à 100 \% pour les pourcentages lignes et colonnes, en proposant différentes règles de décision.
}
\examples{
library(dplyr)

prenoms |>
  filter(annais == "2020",
         lib_reg \%in\% c("Occitanie", "Pays de la Loire")) |>
  tab_build(var_rows = c(lib_reg, sexe),
            var_cols = prenom,
            var_stat = nombre,
            lab_total = "Total",
            stat = "sum") |>
  tab_pct(pct = "row") |>
  tab_round(n = 0,
            guarantee_100 = TRUE,
            option = "closest",
            verbose = TRUE)
}
